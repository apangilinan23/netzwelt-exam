@model TerritoryViewModel


@{ 
    var placesToSkip = new List<string>();
}
<div class="row">
    <div class="mx-auto col-lg-8">
        <div class="row">
            <div class="col-lg-12">
                <h3>Territories</h3>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12">
                @{
                    foreach (var territory in Model.Territories)
                    {
                        if (placesToSkip.Contains(territory.Parent))
                        {
                            continue;
                        } 
                        <div class="panel-group pb-2">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a data-toggle="collapse" href="#header-@territory.Parent.Replace(' ','-')">@territory.Parent</a>
                                    </h4>
                                </div>
                                <div id="header-@territory.Parent.Replace(' ','-')" class="panel-collapse collapse show">
                                    <ul class="list-group">
                                        @{
                                            foreach (var child in territory.Children)
                                            {   
                                                <li class="list-group-item">
                                                    @child
                                                    @if (Model.Territories.Select(x => x.Parent).Contains(child))
                                                    {
                                                        var childAsParent = Model.Territories.FirstOrDefault(x => x.Parent == child);
                                                        placesToSkip.Add(child);
                                                        <ul class ="list-group list-group-flush">
                                                            @foreach (var subChild in childAsParent.Children)
                                                            {
                                                                <li class="list-group-item">@subChild</li>
                                                                
                                                            }
                                                        </ul>
                                                    }
                                                </li>
                                            }
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>
                    }
                }
                <ul>
                </ul>
            </div>
        </div>
    </div>
</div>


